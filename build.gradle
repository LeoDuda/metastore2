plugins { 
    id "org.springframework.boot" version "2.3.0.RELEASE"
    id 'io.franzbecker.gradle-lombok' version '4.0.0'
    id "io.spring.dependency-management" version "1.0.8.RELEASE" 
    id "com.github.kt3k.coveralls" version "2.8.1" 
    id "org.owasp.dependencycheck" version "3.1.2"
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'net.researchgate.release' version '2.8.1'
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

description = 'General purpose metadata repository and schema registry service'
group = 'edu.kit.datamanager'

println "Building ${name} version: ${version}"


repositories {
    mavenLocal() 
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
 
configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

lombok {
    version = '1.18.20'
    sha256 = ""
}

if (project.hasProperty('travis')) {
    println 'Using travis profile for building ' + project.getName()
    apply from: 'gradle/profile-travis.gradle'
} else if (project.hasProperty('release')) {
    println 'Using release profile for building ' + project.getName()
    apply from: 'gradle/profile-release.gradle'   
} 

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'    
    implementation "org.javers:javers-spring-boot-starter-sql:3.9.0"
    implementation "org.springframework.boot:spring-boot-starter-data-rest"
    implementation "org.springframework.boot:spring-boot-starter-mail"

    // springdoc
    implementation("org.springdoc:springdoc-openapi-ui:1.5.6")
    implementation("org.springdoc:springdoc-openapi-data-rest:1.5.6")
    implementation("org.springdoc:springdoc-openapi-webmvc-core:1.5.6")


    // driver for postgres
    implementation "org.postgresql:postgresql:42.2.1"
    //driver for h2
    implementation "com.h2database:h2:1.4.200"
    
    
    implementation "org.apache.tika:tika-core:1.18"
    implementation "org.javers:javers-core:5.3.2"

    // JSON validator
    implementation "com.networknt:json-schema-validator:1.0.43"
  
    // datamanager
    implementation "edu.kit.datamanager:repo-core:0.9.0-SNAPSHOT"
//    implementation("edu.kit.datamanager:service-base:0.3.0-SNAPSHOT")

    runtimeOnly    'org.apache.httpcomponents:httpclient:4.5.6'
    
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework:spring-test"
    testImplementation "org.springframework.security:spring-security-test"
   
    //Java 11 Support 
    testImplementation "org.mockito:mockito-core:3.12.0"
    testImplementation "org.powermock:powermock-module-junit4:2.0.9"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.9"
    testImplementation "junit:junit:4.13.2"
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
    }
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
    launchScript()
}

test {
    finalizedBy jacocoTestReport
    environment "spring.config.location", "classpath:/test-config/"

    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}

jacoco {
    toolVersion = "0.8.5"
}

// task for printing project name.
task printProjectName {
    doLast {
        println "${project.name}"
    }
}
